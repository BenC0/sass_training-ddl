h1, h2, h3, h4, h5, h6, p, label {
	font-family: 'Brandon Grotesque Medium';
	line-height: 1.4;
	margin: 0;
}

// Store the h1 font size in a variable
$h1-font--size: 40px;
// Store the font-size increments in a variable
$increments: 2px;

// SCSS For Loop: Loop 7 times
@for $i from 1 through 7 {
	// Store font size in a variable
	// Font size is equal to h1-font--size plus the increment, minus the increment times the current value of i
	$fs: ($h1-font--size + $increments) - ($i * $increments);
	// If i equals 7, declare the p font size
	@if $i == 7 {
		p {
			font-size: $fs;
		}
	// If I is not equal to 7, declare the style using the value of i as the heading number (h1, h2, h3...)
	} @else {
		h#{$i} {
			font-size: $fs;
		}
	}
}

// SCSS Nesting - when the code is compiled the selectors are concatenated.
// Example - The first nested selector would be outputted as "form .row { ... }" 
form {
	.row {
		width: 100%;
		max-width: 500px;
		position: relative;
		margin-bottom: 15px;

		label {
			left: 5px;
			top: 5px;
			position: absolute;
			// SCSS Variable - the variable is declared in the globals partial file but can be used here as
			// we are already importing the globals partial in the index.scss file, before importing this
			// partial (the same applies to mixins, extensions, etc.)
			line-height: $input--size;
	        transition: all .25s ease-in;
	        box-sizing: border-box;
			font-family: 'Brandon Grotesque Medium';
		}

		input {
	        border: 0;
			width: 100%;
	        padding: 25px 5px 10px;
			font-family: 'Brandon Grotesque Bold';
	        box-sizing: border-box;
	        // using the "level" mixin and passing the values 1 and false to it
			@include level(1, false);

			// SCSS Nesting - Using the & as a placeholder for the parent selector 
			&:focus, &:active, &.active {
				@include level(2, false);
				+ label {
					left: 3px;
					top: 5px;
					font-size: 14px;
					line-height: 14px;
					color: $brand-primary--green;
				}
			}
		}

		button {
			cursor: pointer;
			width: 100%;
			height: $input--size * 1.5;
	        box-sizing: border-box;

			border: 0;
			padding: 0 20px;
			font-size: 18px;
			background: $brand-primary--white;
			font-family: 'Brandon Grotesque Bold';
			@include level(1, true);
		}
	}
}